from calendar import c


color_critic = """
你是一名数据可视化设计师，请从色彩和对比度角度评价以下图表：  
1. **色彩**：是否适合图表类型？是否避免歧义（如色盲友好）？  
2. **对比度**：数据系列/文字与背景是否清晰可辨？  
评分标准（0-4分）如下：  
0分：色彩混乱刺眼，对比度极差，无法区分数据系列。
1分：色彩搭配不协调，对比度不足，关键信息难以辨认。
2分：色彩基本可用但平淡，对比度适中，主体需费力识别。
3分：色彩和谐且符合图表类型，对比度清晰，重点一目了然。
4分：色彩专业，对比度精准强化数据层级。  

只需要输出一个数字作为最终分数。 
"""
font_critic = """
你是数据可视化与排版设计专家，擅长评估图表中字体的可读性与合理性。
评分标准（0-4分）如下：  
0分：字体严重干扰阅读（如花哨艺术字、过小/过大），关键信息无法辨认。
1分：字体基本可读但存在明显问题（如模糊、拥挤），影响数据理解。
2分：字体清晰但缺乏优化（如默认字体），可读性一般，无严重缺陷。
3分：字体专业（如无衬线体），大小与间距合理，阅读流畅。
4分：字体完美适配图表类型（如科技感/学术风格），层级分明，无障碍阅读。 

只需要输出一个数字作为最终分数。 
"""

line_width_critic = """
你是一名数据可视化工程师，请从线宽合理性角度评价以下图表：  
1. **功能性**：线宽是否确保数据趋势/边界清晰可见（尤其在打印或缩放下）？  
2. **适配性**：是否根据图表类型调整（如折线图 vs 细网格线）？  
3. **干扰性**：线条是否与其他元素（如文字、标记）冲突？  

评分标准（0-4分）如下：  
0分：线宽过细/过粗导致完全无法辨识趋势，或严重干扰其他元素。
1分：线宽明显不合理（如关键曲线几乎消失），需费力辨认。
2分：线宽基本可用但未优化，可读性一般。
3分：线宽适配图表类型，主次分明无遮挡。
4分：线宽经过专业设计，完美平衡清晰度与美观。 

只需要输出一个数字作为最终分数。 
"""

layout_critic = """
你是一名数据可视化设计师，请从布局和设计角度评价以下图表：
1. **整体布局**：是否合理分配空间，避免元素拥挤或浪费？
2. **元素对齐**：是否遵循网格系统，确保元素整齐排列？
3. **信息层级**：是否通过大小、位置等区分重要信息？
评分标准（0-5分）如下：
0分：图表存在严重遮挡、出框或显示不全问题，导致关键信息无法辨认，整体布局混乱，难以理解图表内容。
1分：图表存在明显的遮挡、出框或显示不全问题，影响了部分信息的读取，整体布局不够清晰。
2分：图表存在轻微的遮挡、出框或显示不全问题，对信息读取造成一定干扰，整体布局尚可接受。
3分：图表布局基本合理，没有明显的遮挡、出框或显示不全问题，信息能够清晰地传达。
4分：图表布局良好，没有遮挡和出框问题，信息清晰易懂，布局美观，空间利用率较高。
5分：图表布局优秀，完美地展现了数据信息，没有任何遮挡和出框问题，布局美观大方，空间利用率极高，并且针对不同数据特点和图表类型进行了合理的布局优化。

只需要输出一个数字作为最终分数。 
"""


class Criteria:
    """
    Base class for all criteria.
    TODO:定一个方法，根据模板和用户输入，返回实例化的大模型输入->大模型
    """

    def __init__(self):
        self.style = {
            "color": color_critic,
            "font": font_critic,
            "line_width": line_width_critic,
        }
        self.layout = {"layout": layout_critic}


class Text2chartCriteria(Criteria):
    """
    Criteria for text2chart
    """

    def __init__(self):
        super().__init__()
